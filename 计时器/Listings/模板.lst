C51 COMPILER V9.59.0.0   ____                                                              04/21/2019 16:23:00 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ____
OBJECT MODULE PLACED IN .\Objects\模板.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 模板.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\模板
                    -.lst) TABS(2) OBJECT(.\Objects\模板.obj)

line level    source

   1          #include <reg52.h>
   2          sbit LSA=P2^2;
   3          sbit LSB=P2^3;
   4          sbit LSC=P2^4;
   5          sbit reset=P3^2;  //用于定时器重置
   6          sbit on_off=P3^3;   //用于计时器停止和开启
   7          int hour=0,min=0,sec=0,i=0;
   8          char code list[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x40};
   9          
  10          void delay(int i)
  11          {
  12   1        while(i--);
  13   1      }
  14          
  15          void Init_T0()
  16          {
  17   1        EA=1;
  18   1        ET0=1;      //打开定时计数器中断允许位
  19   1        TMOD|=0x01;  //设置工作方式(GATE,C/T,M1M0)
  20   1        TR0=1;      //置1，允许T0运行
  21   1        TH0=0xfc;   //设置初值
  22   1        TL0=0x18;
  23   1      }
  24          
  25          void Init_Ex()
  26          {
  27   1        EX0=1;
  28   1        IT0=1; //下降沿触发
  29   1        EX1=1;
  30   1        IT1=1;
  31   1      }
  32          void display_part(int x,int pos)   //用以显示数字,x为要显示的数字，pos为显示的位置
  33          {
  34   1        switch(pos)
  35   1        {
  36   2          case(0):LSA=0;LSB=0;LSC=0;break;
  37   2          case(1):LSA=1;LSB=0;LSC=0;break;
  38   2          case(2):LSA=0;LSB=1;LSC=0;break;
  39   2          case(3):LSA=1;LSB=1;LSC=0;break;
  40   2          case(4):LSA=0;LSB=0;LSC=1;break;
  41   2          case(5):LSA=1;LSB=0;LSC=1;break;
  42   2          case(6):LSA=0;LSB=1;LSC=1;break;
  43   2          case(7):LSA=1;LSB=1;LSC=1;break;
  44   2        }
  45   1        P0=list[x];
  46   1        delay(100);
  47   1        P0=0x00;
  48   1      }
  49          
  50          void display_all(int hour,int min, int sec)
  51          {
  52   1        int a,b;  //取出个位十位
  53   1        a=sec%10;
  54   1        b=sec/10;
C51 COMPILER V9.59.0.0   ____                                                              04/21/2019 16:23:00 PAGE 2   

  55   1        display_part(a,0);  //秒
  56   1        display_part(b,1);
  57   1        display_part(10,2);
  58   1        a=min%10;
  59   1        b=min/10;
  60   1        display_part(a,3);  //分
  61   1        display_part(b,4);
  62   1        display_part(10,5);
  63   1        a=hour%10;
  64   1        b=hour/10;
  65   1        display_part(a,6);  //时
  66   1        display_part(b,7);
  67   1      }
  68          
  69          void main()
  70          {
  71   1        Init_T0();
  72   1        Init_Ex();
  73   1        while(1)
  74   1        {
  75   2          if(i>=1000)  //之所以不写(i==1000)时因为i的变化很快，当i==1000(这个时刻)时去判断需要时间，i此时已经不是1
             -000了
  76   2          {
  77   3            sec++;
  78   3            i=0;
  79   3          }
  80   2          if(sec>=60)  //同上
  81   2          {
  82   3            min++;
  83   3            sec=0;
  84   3          }
  85   2          if(min>=60)  //同上
  86   2          {
  87   3            hour++;
  88   3            min=0;
  89   3          }
  90   2          display_all(hour,min,sec);   //小时，分钟，秒
  91   2        }
  92   1      }
  93          
  94          void t0() interrupt 1
  95          {
  96   1        TH0=0xfc;   // 回到初值，重新计时
  97   1        TL0=0x18;
  98   1        i++;
  99   1      }
 100          
 101          void Ex0() interrupt 0   //用于定时器重置
 102          {
 103   1        delay(100);
 104   1        if(reset==0) 
 105   1        {
 106   2          hour=0;min=0;sec=0;
 107   2        }
 108   1      }
 109          void Ex1() interrupt 2   //用于计时器停止和开启
 110          {
 111   1        delay(100);
 112   1        if(on_off==0)
 113   1        {
 114   2          ET0=~ET0;   //打开定时计数器中断允许位
 115   2        }
C51 COMPILER V9.59.0.0   ____                                                              04/21/2019 16:23:00 PAGE 3   

 116   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    507    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
