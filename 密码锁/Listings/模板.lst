C51 COMPILER V9.54   ____                                                                  11/10/2019 12:46:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ____
OBJECT MODULE PLACED IN .\Objects\模板.obj
COMPILER INVOKED BY: D:\Keil_v5MDK\C51\BIN\C51.EXE 模板.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\模板.lst) TABS(2) OBJECT(.\Objects\模板.obj)

line level    source

   1          /*
   2            k1确认键，k2取消键，k3重置密码键(密码输入正确的情况下能用),k4返回键(用于密码输入正确后想退出的情况)
   3            密码输入错误会报警，三次后会长时间报警，数码管闪烁
   4            重置完密码后按确认键，回到输入密码状态
   5            重置密码时，两次密码不正确蜂鸣器会响，需要重新输入两次密码
   6            
   7            密码重置与验证，处理好两次输入时的显示以及两次密码不对时对两个数组的处理及后续
   8            
   9            复位保存，掉电保存
  10          */
  11          #include <reg51.h>
  12          #include "i2c.h"
  13          #include "delay.h"
  14          typedef unsigned int u16; 
  15          typedef unsigned char u8;
  16          #define GPIO_KEY P1
  17          
  18          sbit ok=P3^1;      //确认键
  19          sbit cancel=P3^0;  //取消键
  20          sbit set=P3^2;     //重置密码键
  21          sbit back=P3^3;    //返回键
  22          
  23          sbit Beep=P1^5;    //蜂鸣器
  24          sbit LSA=P2^2;
  25          sbit LSB=P2^3;
  26          sbit LSC=P2^4;
  27          
  28          void Buzzer(int tone,int beat);
  29          void Timer0_Init(void);
  30          void PwdWrite(u8 *buff, u8 len);
  31          void DigDisplay(u8 *buff,u8 len);
  32          void OkKeyPress(void);
  33          void CancelKeyPress(void);
  34          void SetPwdKeyPress(void);
  35          void BackKeyPress(void);
  36          u8 PwdVerify(u8 *buff, u8 len);
  37          u8 KeyPress(void);
  38          
  39          int Beat_val=0;  //蜂鸣器
  40          u8 smgduan[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};  //0~9
  41          u8 Pwd[6]={1,2,3,4,5,6},Mask[8],PwdRead[6],DataHex[8],PwdRead2[6];   //PwdRead2[6]用于密码二次确认
  42          u8 correct[8]={0x39,0x09,0x09,0x09,0x09,0x09,0x09,0x0f};  //用于输入正确时的显示
  43          u8 warning[8]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};  //3次输入错误时数码管的显示
  44          u8 bdata PassFlg=0,AllowSetPwdFlg=0,SetPwdFlg=0,PwdTwiceFlg=0,VerifyFlg=0;    
  45          u8 counter=0,KeyValue,TryTime=0;   //用来记录输入了几位数
  46          
  47          void main()
  48          {
  49   1        Timer0_Init();
  50   1        PwdWrite(&Pwd,sizeof(Pwd)); //开始时写入密码                           需要掉电保存
  51   1      
  52   1        while(1)
  53   1        {
  54   2          OkKeyPress();
C51 COMPILER V9.54   ____                                                                  11/10/2019 12:46:15 PAGE 2   

  55   2          CancelKeyPress();
  56   2          SetPwdKeyPress();
  57   2          BackKeyPress();
  58   2          
  59   2          if(KeyPress()) 
  60   2          {
  61   3            counter++;
  62   3            if(!PwdTwiceFlg||SetPwdFlg||VerifyFlg) PwdRead[counter-1]=KeyValue;
  63   3            if(SetPwdFlg||PwdTwiceFlg||VerifyFlg) DataHex[counter-1]=smgduan[KeyValue];   //储存重置密码的编码
  64   3            if(PwdTwiceFlg) PwdRead2[counter-1]=KeyValue;   //储存第二次输入的密码
  65   3          }
  66   2          
  67   2          if((SetPwdFlg||PwdTwiceFlg)&&(counter!=0))    //显示重置的密码
  68   2          {
  69   3            DigDisplay(&DataHex,sizeof(DataHex));
  70   3          }
  71   2          
  72   2          if((counter!=0)&&(!PassFlg||VerifyFlg))     //修改密码时输入密码用掩码显示 
  73   2          {
  74   3            Mask[counter-1]=0x40;   //0x40='-'  
  75   3            DigDisplay(&Mask,sizeof(Mask));
  76   3          }
  77   2            
  78   2          if(PassFlg&&((!SetPwdFlg)&&(!PwdTwiceFlg)&&(!VerifyFlg)))
  79   2          {
  80   3            DigDisplay(&correct,sizeof(correct));
  81   3          }
  82   2          
  83   2          if(TryTime==3) 
  84   2          {
  85   3            TR0=1;
  86   3            Buzzer(95,250); //蜂鸣器的频率和节拍
  87   3            DigDisplay(&warning,sizeof(warning));
  88   3          }
  89   2        }
  90   1      }
  91          
  92          
  93          void OkKeyPress()
  94          {
  95   1        u8 i;
  96   1        if(ok==0)  //判断是否按下确认键        
  97   1        {
  98   2          delay10ms();
  99   2          if(ok==0) 
 100   2          {
 101   3            if(VerifyFlg)              //用于重置密码前的密码验证
 102   3            {
 103   4              AllowSetPwdFlg=(PwdVerify(&PwdRead,sizeof(PwdRead)))? 1 : 0;
 104   4              if(AllowSetPwdFlg)         //
 105   4              {
 106   5                SetPwdFlg=1;
 107   5                VerifyFlg=0;
 108   5                counter=0;
 109   5                for(i=0;i<8;i++) Mask[i]=0x00;
 110   5                for(i=0;i<8;i++) DataHex[i]=0x00;
 111   5              }
 112   4              else
 113   4              {
 114   5                TR0=1;
 115   5                Buzzer(95,250);
 116   5                TR0=0;
C51 COMPILER V9.54   ____                                                                  11/10/2019 12:46:15 PAGE 3   

 117   5                for(i=0;i<8;i++) DataHex[i]=0x00;
 118   5                counter=0;
 119   5              }
 120   4            }
 121   3            
 122   3            else if(PwdTwiceFlg)                //第二次的输入确定
 123   3            {
 124   4              for(i=0;i<6;i++)
 125   4              {
 126   5                if(PwdRead[i]!=PwdRead2[i]) break;
 127   5              }
 128   4              if(i<6)   //两次输入的密码不一致
 129   4              {
 130   5                TR0=1;
 131   5                Buzzer(95,250);
 132   5                TR0=0;
 133   5                for(i=0;i<6;i++) PwdRead[i]=0;
 134   5                for(i=0;i<6;i++) PwdRead2[i]=0;
 135   5                for(i=0;i<8;i++) DataHex[i]=0x00;
 136   5                counter=0;
 137   5              }
 138   4              else    //两次密码输入正确，存入密码
 139   4              {
 140   5                PwdWrite(PwdRead,sizeof(PwdRead));
 141   5                PwdTwiceFlg=0;
 142   5                PassFlg=0;
 143   5                TryTime=0;
 144   5                counter=0;
 145   5                for(i=0;i<8;i++) Mask[i]=0x00;
 146   5                for(i=0;i<8;i++) DataHex[i]=0x00;
 147   5                for(i=0;i<6;i++) PwdRead[i]=0;
 148   5                for(i=0;i<6;i++) PwdRead2[i]=0;
 149   5              }
 150   4            }
 151   3            
 152   3            else if(SetPwdFlg)      //第一次的输入确定
 153   3            {
 154   4              PwdTwiceFlg=1;
 155   4      //        PwdWrite(PwdRead,sizeof(PwdRead));
 156   4              SetPwdFlg=0;
 157   4      //        PassFlg=0;
 158   4      //        TryTime=0;
 159   4              counter=0;
 160   4              TryTime=0;
 161   4              for(i=0;i<8;i++) Mask[i]=0x00;
 162   4              for(i=0;i<8;i++) DataHex[i]=0x00;
 163   4              
 164   4      //        for(i=0;i<6;i++) PwdRead[i]=0;
 165   4            }
 166   3            
 167   3            else
 168   3            {
 169   4              PassFlg=(PwdVerify(&PwdRead,sizeof(PwdRead)))? 1 : 0;
 170   4              if((!PassFlg)&&(TryTime==0)) 
 171   4              {
 172   5                TryTime=1;
 173   5                TR0=1;
 174   5                Buzzer(95,250);
 175   5                TR0=0;
 176   5                for(i=0;i<8;i++) Mask[i]=0x00;
 177   5                for(i=0;i<6;i++) PwdRead[i]=0;
 178   5                counter=0;
C51 COMPILER V9.54   ____                                                                  11/10/2019 12:46:15 PAGE 4   

 179   5              }
 180   4              else if ((!PassFlg)&&(TryTime==1)) 
 181   4              {
 182   5                TryTime=2;
 183   5                TR0=1;
 184   5                Buzzer(95,250);
 185   5                TR0=0;
 186   5                for(i=0;i<8;i++) Mask[i]=0x00;
 187   5                for(i=0;i<6;i++) PwdRead[i]=0;
 188   5                counter=0;
 189   5              }
 190   4              else if ((!PassFlg)&&(TryTime==2)) 
 191   4              {
 192   5                TryTime=3;
 193   5                TR0=1;
 194   5                Buzzer(95,250);
 195   5                TR0=0;
 196   5                for(i=0;i<8;i++) Mask[i]=0x00;
 197   5                for(i=0;i<6;i++) PwdRead[i]=0;
 198   5                counter=0;
 199   5              }
 200   4            }
 201   3          }
 202   2          while(!ok);
 203   2        }
 204   1      }
 205          
 206          void CancelKeyPress(void)
 207          {
 208   1        if(cancel==0)
 209   1        {
 210   2          delay10ms();
 211   2          if(cancel==0)
 212   2          {
 213   3            if(counter>0)
 214   3            {
 215   4              Mask[counter-1]=0x00;
 216   4              DataHex[counter-1]=0x00; 
 217   4              counter--;
 218   4            }
 219   3          }
 220   2          while(!cancel);
 221   2        }
 222   1      }
 223          
 224          void SetPwdKeyPress(void)
 225          {
 226   1        u8 i;
 227   1        if(set==0)
 228   1        {
 229   2          delay10ms();
 230   2          if(set==0)
 231   2          {
 232   3            if(PassFlg==1)
 233   3            {
 234   4              VerifyFlg=1;  
 235   4              TryTime=0;
 236   4              for(i=0;i<8;i++) Mask[i]=0x00;
 237   4              for(i=0;i<8;i++) DataHex[i]=0x00;
 238   4              counter=0;
 239   4            }
 240   3          }
C51 COMPILER V9.54   ____                                                                  11/10/2019 12:46:15 PAGE 5   

 241   2          while(!set);
 242   2        }
 243   1      }
 244          
 245          void BackKeyPress(void)
 246          {
 247   1        if(back==0)
 248   1        {
 249   2          delay10ms();
 250   2          if(back==0)
 251   2          {
 252   3            PassFlg=0;
 253   3          }
 254   2          while(!back);
 255   2        }
 256   1      }
 257          void PwdWrite(u8 *buff, u8 len)   //数组首地址，数组长度
 258          {
 259   1        u8 At24c02_addr=1;     
 260   1        while(len--)
 261   1        {
 262   2          At24c02Write(At24c02_addr++,*buff);
 263   2          delay10ms();
 264   2          buff++;
 265   2        }
 266   1      }
 267          
 268          
 269          
 270          u8 PwdVerify(u8 *buff, u8 len)   //密码验证
 271          {
 272   1        u8 At24c02_addr=1,Pass=0,i=0,num; 
 273   1        for(i=0;i<len;i++)
 274   1        {
 275   2          num=At24c02Read(At24c02_addr);
 276   2          delay10ms();
 277   2          if(num==buff[i]) At24c02_addr++;
 278   2          else break;
 279   2        }
 280   1        if(i>=len) Pass=1;
 281   1        return Pass;
 282   1      }
 283          
 284          
 285          void DigDisplay(u8 *buff,u8 len)
 286          {
 287   1        u8 i;
 288   1        for(i=0;i<len;i++)
 289   1        {
 290   2          switch(i)  
 291   2          {
 292   3            case(0):LSA=0;LSB=0;LSC=0; break;
 293   3            case(1):LSA=1;LSB=0;LSC=0; break;
 294   3            case(2):LSA=0;LSB=1;LSC=0; break;
 295   3            case(3):LSA=1;LSB=1;LSC=0; break;
 296   3            case(4):LSA=0;LSB=0;LSC=1; break;
 297   3            case(5):LSA=1;LSB=0;LSC=1; break;
 298   3            case(6):LSA=0;LSB=1;LSC=1; break;
 299   3            case(7):LSA=1;LSB=1;LSC=1; break; 
 300   3          }
 301   2          P0=buff[7-i];
 302   2          delay1ms(); 
C51 COMPILER V9.54   ____                                                                  11/10/2019 12:46:15 PAGE 6   

 303   2          P0=0x00;
 304   2        }
 305   1      }
 306          
 307          
 308          u8 KeyPress(void)
 309          {
 310   1        char a=0;
 311   1        u8 bdata flag=0;   //flag用于判断是否按过键
 312   1        GPIO_KEY=0x0f;
 313   1        if(GPIO_KEY!=0x0f)
 314   1        {
 315   2          delay10ms();
 316   2          if(GPIO_KEY!=0x0f)
 317   2          { 
 318   3            
 319   3            GPIO_KEY=0x0f;
 320   3            switch(GPIO_KEY)
 321   3            {
 322   4              case(0X07): KeyValue=0;break;
 323   4              case(0X0b): KeyValue=1;break;
 324   4              case(0X0d): KeyValue=2;break;
 325   4              case(0X0e): KeyValue=3;break;
 326   4            }
 327   3            GPIO_KEY=0Xf0;
 328   3            switch(GPIO_KEY)
 329   3            {
 330   4              case(0X70): KeyValue=KeyValue;flag=1;break;
 331   4              case(0Xb0): KeyValue=KeyValue+4;flag=1;break;
 332   4              case(0Xd0): KeyValue=KeyValue+8;flag=1;break;
 333   4              case(0Xe0): KeyValue=KeyValue+12;flag=1;break;
 334   4            }
 335   3            while((a<50)&&(GPIO_KEY!=0xf0))  
 336   3            {
 337   4              delay10ms();
 338   4              a++;
 339   4            }
 340   3          }
 341   2        }
 342   1        if(flag) return 1;
 343   1        else return 0;
 344   1      }
 345          
 346          void Timer0() interrupt 1
 347          {
 348   1        TH0=0xfc;   
 349   1        TL0=0x18;
 350   1        Beat_val--;
 351   1      }
 352          
 353          
 354          void Buzzer(int tone,int beat)
 355          {
 356   1        int i=0;
 357   1        Beat_val=beat;
 358   1        EA=1; 
 359   1        while(Beat_val>0)
 360   1        {
 361   2          Beep=0;
 362   2          i=tone;
 363   2          while(i) i--;
 364   2          Beep=1;
C51 COMPILER V9.54   ____                                                                  11/10/2019 12:46:15 PAGE 7   

 365   2          i=tone;
 366   2          while(i) i--;
 367   2        }
 368   1          EA=0; 
 369   1      }
 370          
 371          
 372          void Timer0_Init()
 373          {
 374   1        TMOD=0x01;
 375   1        TH0=0xfc;   //1ms
 376   1        TL0=0x18;
 377   1        ET0=1; //EA,TR0不在此处设置
 378   1      }
 379          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1323    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     71      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
